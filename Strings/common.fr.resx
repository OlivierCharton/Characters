<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activated" xml:space="preserve">
    <value>activé</value>
  </data>
  <data name="Armorsmith" xml:space="preserve">
    <value>Forgeron d'armures</value>
  </data>
  <data name="Artificer" xml:space="preserve">
    <value>Artificier</value>
  </data>
  <data name="AutoLogin_Description" xml:space="preserve">
    <value>S'il est activé au premier chargement de Blish et qu'il se trouve dans la sélection des personnages, le module entre dans le jeu. Après être entré dans le jeu, il attendra que le MumbleLink et le Token API soient complètement chargés.
Une fois le chargement terminé, il basculera vers le personnage qui est défini comme étant le "Login Character".</value>
  </data>
  <data name="AutoLogin_DisplayName" xml:space="preserve">
    <value>Connexion automatique du personnage sélectionné</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>Anniversaire</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Capture" xml:space="preserve">
    <value>Saisir</value>
  </data>
  <data name="CaptureAll" xml:space="preserve">
    <value>Tout saisir</value>
  </data>
  <data name="CaptureNotification" xml:space="preserve">
    <value>Enregistré sous {0}!</value>
  </data>
  <data name="Characters" xml:space="preserve">
    <value>Caractères</value>
  </data>
  <data name="Chef" xml:space="preserve">
    <value>Maître-queux</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="CraftingProfession" xml:space="preserve">
    <value>Profession de l'artisanat</value>
  </data>
  <data name="CreateImages" xml:space="preserve">
    <value>Créer des images</value>
  </data>
  <data name="CustomTags" xml:space="preserve">
    <value>Étiquettes personnalisées</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Jours</value>
  </data>
  <data name="Deactivated" xml:space="preserve">
    <value>désactivé</value>
  </data>
  <data name="DoubleClickToEnter_Description" xml:space="preserve">
    <value>Permet de double-cliquer sur le personnage dans la liste des personnages pour se connecter à ce personnage.</value>
  </data>
  <data name="DoubleClickToEnter_DisplayName" xml:space="preserve">
    <value>Double-cliquez pour échanger</value>
  </data>
  <data name="DoubleClickToSwap" xml:space="preserve">
    <value>Double-cliquez pour passer à {0} !</value>
  </data>
  <data name="EnterOnSwap_Description" xml:space="preserve">
    <value>Entrer dans le jeu automatiquement après avoir sélectionné le personnage dans la sélection des personnages.</value>
  </data>
  <data name="EnterOnSwap_DisplayName" xml:space="preserve">
    <value>Connexion après avoir choisi le personnage</value>
  </data>
  <data name="EnterToLogin_Description" xml:space="preserve">
    <value>Si le champ de recherche est focalisé et que tu appuies sur 'RETURN', passe au premier personnage de la liste.</value>
  </data>
  <data name="EnterToLogin_DisplayName" xml:space="preserve">
    <value>Appuie sur Entrée pour changer</value>
  </data>
  <data name="Error_Competivive" xml:space="preserve">
    <value>Le changement de personnage est désactivé en mode compétition !</value>
  </data>
  <data name="Error_InvalidPermissions" xml:space="preserve">
    <value>Cette clé d'API ne dispose pas des autorisations requises.</value>
  </data>
  <data name="FadeOut_Description" xml:space="preserve">
    <value>Le filtre et la fenêtre de caractères s'effacent automatiquement après 2500 ms.</value>
  </data>
  <data name="FadeOut_DisplayName" xml:space="preserve">
    <value>s'estompent fenêtre supplémentaire</value>
  </data>
  <data name="FilterDelay_Description" xml:space="preserve">
    <value>Temps moyen, en millisecondes, d'attente entre le filtrage du panneau de vos personnages.
Pour obtenir la valeur actuelle, vous devrez changer d'onglet de module une fois pour mettre à jour la page de paramètres !</value>
  </data>
  <data name="FilterDelay_DisplayName" xml:space="preserve">
    <value>Retard du filtre ({0} ms)</value>
  </data>
  <data name="FocusFilter_Description" xml:space="preserve">
    <value>Lorsque le menu principal est affiché, le champ de recherche est automatiquement mis en évidence.</value>
  </data>
  <data name="FocusFilter_DisplayName" xml:space="preserve">
    <value>Champ de recherche ciblé</value>
  </data>
  <data name="Huntsman" xml:space="preserve">
    <value>Chasseur</value>
  </data>
  <data name="Jeweler" xml:space="preserve">
    <value>Bijoutier</value>
  </data>
  <data name="Leatherworker" xml:space="preserve">
    <value>Travailleur du cuir</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Niveau {0}</value>
  </data>
  <data name="LoginAfterSelect" xml:space="preserve">
    <value>Entrer dans le jeu automatiquement après avoir sélectionné le personnage dans la sélection des personnages.</value>
  </data>
  <data name="LoginCharacter" xml:space="preserve">
    <value>Personnage de connexion</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Déconnexion</value>
  </data>
  <data name="LogoutDescription" xml:space="preserve">
    <value>Touche à appuyer pour ouvrir le menu de déconnexion. Doit être la même que celle utilisée dans le jeu pour 'Déconnexion' !</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Carte</value>
  </data>
  <data name="ModuleDescription" xml:space="preserve">
    <value>Un outil pour changer facilement de personnage même s'il y en a beaucoup !
Cela nécessitera une clé API avec des permissions, au moins pour le point de terminaison 'characters' !</value>
  </data>
  <data name="NoCraftingProfession" xml:space="preserve">
    <value>Pas de profession d'artisanat</value>
  </data>
  <data name="OnlyMaxCrafting_Description" xml:space="preserve">
    <value>N'affiche que les métiers qui sont de rang 500 (bijoutier &amp; scribe à 400).</value>
  </data>
  <data name="OnlyMaxCrafting_DisplayName" xml:space="preserve">
    <value>Afficher uniquement les métiers maximum</value>
  </data>
  <data name="Profession" xml:space="preserve">
    <value>Profession</value>
  </data>
  <data name="Race" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="RefreshImages" xml:space="preserve">
    <value>Actualiser les images</value>
  </data>
  <data name="RunStateChange" xml:space="preserve">
    <value>{0} {1} !</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="Scribe" xml:space="preserve">
    <value>Illustrateur</value>
  </data>
  <data name="SearchFor" xml:space="preserve">
    <value>Recherche de ...</value>
  </data>
  <data name="SearchGuide" xml:space="preserve">
    <value>-c Profession d'artisanat
-p Profession/Spécialisation
-r Race
-b Anniversaire
-m MapName
-t CustomTag
-c Chef ; -p Warrior affiche tous les guerriers et tous les chefs.</value>
  </data>
  <data name="SelectImage" xml:space="preserve">
    <value>Choisis une image</value>
  </data>
  <data name="ShortcutToggle_Description" xml:space="preserve">
    <value>Touche à presser pour accéder au menu des personnages.</value>
  </data>
  <data name="ShortcutToggle_DisplayName" xml:space="preserve">
    <value>Changer de menu</value>
  </data>
  <data name="ShowCornerIcon_Description" xml:space="preserve">
    <value>Afficher/masquer l'icône de coin</value>
  </data>
  <data name="ShowCornerIcon_DisplayName" xml:space="preserve">
    <value>Afficher l'icône de coin</value>
  </data>
  <data name="ShowCorner_Name" xml:space="preserve">
    <value>Afficher l'icône d'angle</value>
  </data>
  <data name="ShowCorner_Tooltip" xml:space="preserve">
    <value>Afficher / masquer l'icône d'angle de {0}.</value>
  </data>
  <data name="ShowHide_Tooltip" xml:space="preserve">
    <value>Affiche/cache {0} dans la liste des personnages.</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Spécialisation</value>
  </data>
  <data name="SwapDelay_Description" xml:space="preserve">
    <value>Temps de chargement moyen entre le début du jeu et la sélection du personnage.
Pour obtenir la valeur actuelle, vous devrez changer d'onglet de module une fois pour mettre à jour la page de paramètres !</value>
  </data>
  <data name="SwapDelay_DisplayName" xml:space="preserve">
    <value>Délai de chargement ({0} ms)</value>
  </data>
  <data name="SwapModifier_Description" xml:space="preserve">
    <value>Ce n'est que lorsque le modificateur est pressé que le changement de personnage est déclenché. Cela permet d'éviter une permutation accidentelle !</value>
  </data>
  <data name="SwapModifier_DisplayName" xml:space="preserve">
    <value>Modificateur nécessaire pour changer</value>
  </data>
  <data name="SwitchTo" xml:space="preserve">
    <value>Passer à {0}</value>
  </data>
  <data name="Tailor" xml:space="preserve">
    <value>Tailleur</value>
  </data>
  <data name="Toggle" xml:space="preserve">
    <value>Basculer le {0}</value>
  </data>
  <data name="ToggleAll" xml:space="preserve">
    <value>Commuter tout</value>
  </data>
  <data name="ToggleVisible" xml:space="preserve">
    <value>Afficher/masquer les personnages cachés</value>
  </data>
  <data name="UIScale_Error" xml:space="preserve">
    <value>Veuillez régler le jeu sur 'WINDOWED' {0} et l'échelle de l'interface utilisateur sur 'Larger' !</value>
  </data>
  <data name="UISizeDisclaimer" xml:space="preserve">
    <value>Vous devez régler la taille de l'interface de jeu sur 'Plus grand' pour obtenir les bonnes découpes !</value>
  </data>
  <data name="Unkown" xml:space="preserve">
    <value>Inconnu</value>
  </data>
  <data name="UntilBirthday" xml:space="preserve">
    <value>jusqu'à l'anniversaire</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Mise à jour {0}</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Mis à jour {0}</value>
  </data>
  <data name="Updating" xml:space="preserve">
    <value>Mise à jour de {0}</value>
  </data>
  <data name="UseDefault" xml:space="preserve">
    <value>Spécification</value>
  </data>
  <data name="Utility" xml:space="preserve">
    <value>Utile</value>
  </data>
  <data name="Weaponsmith" xml:space="preserve">
    <value>Forgeron d'armes</value>
  </data>
  <data name="Years" xml:space="preserve">
    <value>Années</value>
  </data>
</root>